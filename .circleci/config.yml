version: 2.1

executors:
  glotzerlab:
    parameters:
      image:
        type: string
      python-version:
        type: string
    docker:
      - image: glotzerlab/ci:2019.05-<< parameters.image >>
    environment:
      PYTHONPATH: /home/ci/project/build
      PYTHON: "/usr/bin/python<< parameters.python-version >>"
      PYTEST: "/usr/bin/python<< parameters.python-version >> -m pytest"
      OMPI_MCA_btl: "tcp,self"
    working_directory: /home/ci/project

commands:
  checkout_with_submodules:
    steps:
      - checkout:
          path: code
      - run:
          name: Update submodules
          working_directory: code
          command: git submodule update --init

  build:
    parameters:
      cc:
        type: string
      cxx:
        type: string
      cmake-bin:
        type: string
      enable-cuda:
        type: boolean
      enable-mpi:
        type: boolean
      enable-tbb:
        type: boolean
      build-validation:
        type: boolean
      build-jit:
        type: boolean
      llvm-version:
        type: string
    steps:
      - run:
          name: Configure
          command: |
            export CC=<< parameters.cc >> CXX=<< parameters.cxx >>
            mkdir build
            cd build
            << parameters.cmake-bin >>/cmake ../code -DPYTHON_EXECUTABLE=${PYTHON} -DENABLE_CUDA=<< parameters.enable-cuda >> -DENABLE_MPI=<< parameters.enable-mpi >> -DENABLE_TBB=<< parameters.enable-tbb >> -DBUILD_VALIDATION=<< parameters.build-validation >> -DBUILD_JIT=<< parameters.build-jit >> -DLLVM_DIR=/usr/lib/llvm-<< parameters.llvm-version >>/cmake -DBUILD_DEPRECATED=off -GNinja
      - run:
          name: Compile
          command: |
            cd build
            ninja -j2

  test:
    parameters:
      cmake-bin:
        type: string
      llvm-version:
        type: string
    steps:
      - run:
          name: Test
          working_directory: build
          no_output_timeout: 2h
          command: |
            export PATH=/usr/lib/llvm-<< parameters.llvm-version >>/bin:$PATH
            << parameters.cmake-bin >>/ctest --no-compress-output -T test --output-on-failure
      - run:
          name: Copy test results
          command: mkdir test-results && cp build/Testing/**/Test.xml test-results/
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

  sphinx:
    steps:
      - run: cd code/sphinx-doc && sphinx-build -b html -d _build/doctrees -W -n . _build/html
      - run: cd code/sphinx-doc && sphinx-build -b latex -d _build/doctrees -W -n . _build/latex

jobs:
  build_and_test:
    parameters:
      image:
        type: string
      cc:
        type: string
      cxx:
        type: string
      python-version:
        type: string
      cmake-bin:
        default: /usr/bin
        type: string
      enable-cuda:
        type: boolean
        default: false
      enable-mpi:
        type: boolean
      enable-tbb:
        type: boolean
      build-validation:
        type: boolean
        default: false
      build-jit:
        type: boolean
      threads:
        type: string
        default: "1"
      llvm-version:
        type: string
        default: "6.0"
    executor:
      name: glotzerlab
      image: << parameters.image >>
      python-version: << parameters.python-version >>
    environment:
      OMP_NUM_THREADS: << parameters.threads >>
    steps:
      - checkout_with_submodules
      - build:
          cc: << parameters.cc >>
          cxx: << parameters.cxx >>
          llvm-version: << parameters.llvm-version >>
          cmake-bin: << parameters.cmake-bin >>
          enable-cuda: << parameters.enable-cuda >>
          enable-mpi: << parameters.enable-mpi >>
          enable-tbb: << parameters.enable-tbb >>
          build-validation: << parameters.build-validation >>
          build-jit: << parameters.build-jit >>
      - test:
          cmake-bin: << parameters.cmake-bin >>
          llvm-version: << parameters.llvm-version >>

  sphinx-docs:
    executor:
      name: glotzerlab
      image: ubuntu18.04
      python-version: "3.6"
    steps:
      - checkout_with_submodules
      - sphinx

workflows:
  workflow:
    jobs:
      - sphinx-docs
      - build_and_test:
          name: clang8-py37-cm313-llvm8-mpi-tbb3
          image: ubuntu19.04
          cc: clang-8
          cxx: clang++-8
          llvm-version: "8"
          python-version: "3.7"
          enable-mpi: on
          enable-tbb: on
          build-jit: on
          threads: "3"

      - build_and_test:
          name: clang7-py37-cm313-llvm7-mpi-tbb3
          image: ubuntu19.04
          cc: clang-7
          cxx: clang++-7
          llvm-version: "7"
          python-version: "3.7"
          enable-mpi: on
          enable-tbb: on
          build-jit: on
          threads: "3"

      - build_and_test:
          name: gcc9-py37-cm313-llvm8-mpi-tbb3
          image: ubuntu19.04
          cc: gcc-9
          cxx: g++-9
          python-version: "3.7"
          enable-mpi: on
          enable-tbb: on
          build-jit: on
          llvm-version: "8"
          threads: "3"

      - build_and_test:
          name: gcc8-py37-cm313-llvm7-mpi-tbb3
          image: ubuntu19.04
          cc: gcc-9
          cxx: g++-9
          python-version: "3.7"
          enable-mpi: on
          enable-tbb: on
          build-jit: on
          llvm-version: "7"
          threads: "3"

      - build_and_test:
          name: gcc8-py36-cm310-llvm6-mpi-tbb3
          image: ubuntu18.04
          cc: gcc-8
          cxx: g++-8
          python-version: "3.6"
          enable-mpi: on
          enable-tbb: on
          build-jit: on
          llvm-version: "6.0"
          threads: "3"

      - build_and_test:
          name: gcc7-py36-cm310-tbb3
          image: ubuntu18.04
          cc: gcc-7
          cxx: g++-7
          python-version: "3.6"
          enable-mpi: off
          enable-tbb: on
          build-jit: off
          threads: "3"

      - build_and_test:
          name: gcc6-py36-cm310-mpi
          image: ubuntu18.04
          cc: gcc-6
          cxx: g++-6
          python-version: "3.6"
          enable-mpi: on
          enable-tbb: off
          build-jit: off

      - build_and_test:
          name: clang6-py36-cm310-llvm6-mpi-tbb3
          image: ubuntu18.04
          cc: clang-6.0
          cxx: clang++-6.0
          llvm-version: "6.0"
          python-version: "3.6"
          enable-mpi: on
          enable-tbb: on
          build-jit: on
          threads: "3"

      - build_and_test:
          name: clang5-py36-cm310-llvm5-tbb3
          image: ubuntu18.04
          cc: clang-5.0
          cxx: clang++-5.0
          llvm-version: "5.0"
          python-version: "3.6"
          enable-mpi: off
          enable-tbb: on
          build-jit: on
          threads: "3"

      - build_and_test:
          name: gcc55-py36-cm310
          image: ubuntu18.04
          cc: gcc-5
          cxx: g++-5
          python-version: "3.6"
          enable-mpi: off
          enable-tbb: off
          build-jit: off

      - build_and_test:
          name: gcc48-py36-cm310-mpi-tbb3
          image: ubuntu18.04
          cc: gcc-4.8
          cxx: g++-4.8
          python-version: "3.6"
          enable-mpi: on
          enable-tbb: on
          build-jit: off
          threads: "3"

      - build_and_test:
          name: gcc54-py35-cm35-llvm6-mpi-tbb3
          image: ubuntu16.04
          cc: gcc-5
          cxx: g++-5
          llvm-version: "6.0"
          python-version: "3.5"
          enable-mpi: on
          enable-tbb: on
          build-jit: on
          threads: "3"
