pipeline
    {
    options { skipDefaultCheckout() }
    agent none

    stages
        {
        stage('Unit Tests')
            {
            parallel
                {
                {% for test in unit_tests %}stage('{{ test.name }}')
                    {
                    agent { label '{{ test.agent }}' }

                    steps
                        {
                        sh 'echo ${NODE_NAME}'

                        dir('code')
                            {
                            checkout scm
                            sh 'git submodule update --init'
                            }

                        dir('build')
                            {
                            timeout(time: 1, unit: 'HOURS')
                                {
                                sh '''
                                    singularity exec --nv /nfs/glotzer/containers/{{ test.CONTAINER }} {{ test.CMAKE_BIN }}/cmake ../code -DPYTHON_EXECUTABLE=/usr/bin/python{{ test.PYVER }} -DENABLE_CUDA={{ test.ENABLE_CUDA }} -DENABLE_MPI={{ test.ENABLE_MPI }} -DENABLE_TBB={{ test.ENABLE_TBB }} -DBUILD_VALIDATION=off -DBUILD_TESTING=on -DTEST_CPU_IN_GPU_BUILDS=OFF -DBUILD_DEPRECATED=off -DBUILD_JIT={{ test.BUILD_JIT }} -DLLVM_DIR=/usr/lib/llvm-{{ test.LLVM_VERSION }}/cmake -DALWAYS_USE_MANAGED_MEMORY={{ test.ALWAYS_USE_MANAGED_MEMORY }} -DCMAKE_C_COMPILER={{ test.CC }} -DCMAKE_CXX_COMPULER={{ test.CXX }} -GNinja
                                   '''

                                sh 'singularity exec --nv /nfs/glotzer/containers/{{ test.CONTAINER }} ninja -j 3'
                                }

                            timeout(time: {{ 1 }}, unit: 'HOURS')
                                {
                                sh '''
                                    export OMP_NUM_THREADS={{ test.OMP_NUM_THREADS }}
                                    export SINGULARITYENV_PREPEND_PATH=/usr/lib/llvm-{{ test.LLVM_VERSION }}/bin
                                    singularity exec --nv /nfs/glotzer/containers/{{ test.CONTAINER }} {{ test.CMAKE_BIN }}/ctest --no-compress-output -T test --output-on-failure
                                   '''
                                }
                            }

                        sh 'xsltproc code/.jenkins/ctest2junit.xsl build/Testing/**/Test.xml > ./test.xml'

                        junit 'test.xml'
                        }
                    post
                        {
                        always
                            {
                            archive 'build/Testing/**/Test.xml'
                            deleteDir()
                            }
                        }
                    }
                {% endfor %}
                }
            }

        stage('Validation Tests')
            {
            parallel
                {
                {% for test in vldt_tests %}stage('{{ test.name }}')
                    {
                    agent { label '{{ test.agent }}' }

                    steps
                        {
                        sh 'echo ${NODE_NAME}'

                        dir('code')
                            {
                            checkout scm
                            sh 'git submodule update --init'
                            }

                        dir('build')
                            {
                            timeout(time: 1, unit: 'HOURS')
                                {
                                sh '''
                                    singularity exec --nv /nfs/glotzer/containers/{{ test.CONTAINER }} {{ test.CMAKE_BIN }}/cmake ../code -DPYTHON_EXECUTABLE=/usr/bin/python{{ test.PYVER }} -DENABLE_CUDA={{ test.ENABLE_CUDA }} -DENABLE_MPI={{ test.ENABLE_MPI }} -DENABLE_TBB={{ test.ENABLE_TBB }} -DBUILD_VALIDATION=on -DBUILD_TESTING=off -DTEST_CPU_IN_GPU_BUILDS=OFF -DBUILD_DEPRECATED=off -DBUILD_JIT={{ test.BUILD_JIT }} -DLLVM_DIR=/usr/lib/llvm-{{ test.LLVM_VERSION }}/cmake -DALWAYS_USE_MANAGED_MEMORY={{ test.ALWAYS_USE_MANAGED_MEMORY }} -DCMAKE_C_COMPILER={{ test.CC }} -DCMAKE_CXX_COMPULER={{ test.CXX }} -GNinja
                                   '''

                                sh 'singularity exec --nv /nfs/glotzer/containers/{{ test.CONTAINER }} ninja -j 3'
                                }

                            timeout(time: {{ 12 }}, unit: 'HOURS')
                                {
                                sh '''
                                    export OMP_NUM_THREADS={{ test.OMP_NUM_THREADS }}
                                    export SINGULARITYENV_PREPEND_PATH=/usr/lib/llvm-{{ test.LLVM_VERSION }}/bin
                                    singularity exec --nv /nfs/glotzer/containers/{{ test.CONTAINER }} {{ test.CMAKE_BIN }}/ctest --no-compress-output -T test --output-on-failure
                                   '''
                                }
                            }

                        sh 'xsltproc code/.jenkins/ctest2junit.xsl build/Testing/**/Test.xml > ./test.xml'

                        junit 'test.xml'
                        }
                    post
                        {
                        always
                            {
                            archive 'build/Testing/**/Test.xml'
                            deleteDir()
                            }
                        }
                    }
                {% endfor %}
                }
            }

        }
    }
